name: ML Model CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/*, release/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          mkdir -p tests
          python -m pytest tests/

  train-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create directories
        run: |
          mkdir -p data
          mkdir -p models
          mkdir -p mlruns
      
      - name: Start MLflow server
        run: |
          mlflow server --host 0.0.0.0 --port 5000 &
          sleep 5
      
      - name: Generate dataset and train model
        run: |
          python src/data_generator.py
          export MLFLOW_TRACKING_URI=http://localhost:5000
          python src/train_mlflow.py
      
      - name: Build and test Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t mlops-model:latest .
          docker run -d -p 5001:5001 mlops-model:latest
          sleep 5
          curl http://localhost:5001/health 